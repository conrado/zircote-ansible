#! /bin/sh
#
#	/etc/init.d/{{ logstash.shipper.name }}
#
#	Starts Logstash as a daemon
#
# chkconfig: 2345 20 80
# description: Starts Logstash as a daemon
# pidfile: /var/run/${NAME}.pid

### BEGIN INIT INFO
# Provides: logstash-shipper
# Required-Start: $local_fs $remote_fs
# Required-Stop: $local_fs $remote_fs
# Default-Start: 2 3 4 5
# Default-Stop: S 0 1 6
# Short-Description: Logstash Shipper
# Description: Starts Logstash Shipper as a daemon.

### END INIT INFO

LOCATION={{ logstash.bin_dir | dirname }}
JAVA_ARGS="{{ logstash.shipper.java_args }}"
PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
DESC="Logstash Shipper Daemon"
NAME={{ logstash.shipper.name }}
DAEMON=$(which java)
CONFIG_PATH="{{ logstash.config_path }}"
PATTERNSPATH="{{ logstash.grok_patterns_path }}"
LOGFILE={{ logstash.log_path }}/{{ logstash.shipper.log }}
JARNAME="${LOCATION}/bin/{{ logstash.jar }}"
SCRIPTNAME=/etc/init.d/${NAME}
PIDFILE=/var/run/${NAME}.pid

ARGS="${JAVA_ARGS} -jar ${JARNAME} agent --config ${CONFIG_PATH} --log ${LOGFILE}"
[[ -z ${PATTERNSPATH} && -d ${PATTERNSPATH} ]] && ARGS="${ARGS} --grok-patterns-path ${PATTERNSPATH}"

base=logstash

# Exit if the package is not installed
if [ ! -x "$DAEMON" ]; then
{
  echo "Couldn't find $DAEMON"
  exit 99
}
fi

. /etc/init.d/functions

#
# Function that starts the daemon/service
#
do_start()
{
  cd $LOCATION && \
  ($DAEMON $ARGS &) \
  && success || failure
}

set_pidfile()
{
  pgrep -f "$DAEMON[[:space:]]*$ARGS" > $PIDFILE
}

#
# Function that stops the daemon/service
#
do_stop()
{
    pid=`cat $PIDFILE`
    if checkpid $pid 2>&1; then
       # TERM first, then KILL if not dead
       kill -TERM $pid >/dev/null 2>&1
       usleep 100000
       if checkpid $pid && sleep 1 &&
          checkpid $pid && sleep $delay &&
          checkpid $pid ; then
            kill -KILL $pid >/dev/null 2>&1
            usleep 100000
       fi
    fi
    checkpid $pid
    RC=$?
    [ "$RC" -eq 0 ] && failure $"$base shutdown" || success $"$base shutdown"

}

case "$1" in
  start)
    echo -n "Starting $DESC: "
    do_start
    touch /var/lock/subsys/$NAME
    set_pidfile
    ;;
  stop)
    echo -n "Stopping $DESC: "
    do_stop
    rm /var/lock/subsys/$NAME
    rm $PIDFILE
    ;;
  restart|reload)
    echo -n "Restarting $DESC: "
    do_stop
    do_start
    touch /var/lock/subsys/$NAME
    set_pidfile
    ;;
  status)
    status -p $PIDFILE
    ;;
  *)
    echo "Usage: $SCRIPTNAME {start|stop|status|restart}" >&2
    exit 3
    ;;
esac

echo
exit 0
